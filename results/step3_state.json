{
  "step": "step3",
  "timestamp": "2025-06-21T11:10:04.720810",
  "data_shape": [
    1085,
    132
  ],
  "n_features": 132,
  "features": [
    "Actinomyces massiliensis",
    "Veillonella dispar",
    "Bacteroides plebeius",
    "[Clostridium] scindens",
    "Coprococcus comes",
    "Streptococcus thermophilus",
    "Prevotella buccae",
    "Methanobrevibacter sp.",
    "Bacteroides coprocola",
    "Pseudoflavonifractor capillosus",
    "Actinomyces odontolyticus",
    "Bacteroides coprophilus",
    "Actinomyces naeslundii",
    "[Clostridium] methylpentosum",
    "[Eubacterium] hallii",
    "Ruminococcus sp. 5_1_39BFAA",
    "Gordonibacter pamelaeae",
    "Lachnospiraceae bacterium 1_4_56FAA",
    "Veillonella parvula",
    "[Ruminococcus] torques",
    "Lachnospiraceae bacterium 7_1_58FAA",
    "Peptostreptococcus sp.",
    "Alistipes indistinctus",
    "Rothia dentocariosa",
    "Fusobacterium periodonticum",
    "Streptococcus infantarius",
    "Bifidobacterium breve",
    "Scardovia wiggsiae",
    "Bifidobacterium adolescentis",
    "Dorea longicatena",
    "Eubacterium ventriosum",
    "Unknown",
    "Ruminococcus bromii",
    "Collinsella aerofaciens",
    "Gemella sanguinis",
    "Butyrivibrio crossotus",
    "Klebsiella oxytoca",
    "Subdoligranulum variabile",
    "Dorea formicigenerans",
    "Prevotella stercorea",
    "Desulfovibrio piger",
    "Holdemanella biformis",
    "Holdemania filiformis",
    "Blautia obeum",
    "Streptococcus parasanguinis",
    "Bacteroides thetaiotaomicron",
    "Clostridium sp. L2-50",
    "Bifidobacterium catenulatum",
    "Lactobacillus salivarius",
    "Lachnospiraceae bacterium 3_1_46FAA",
    "Streptococcus anginosus",
    "Flavonifractor plautii",
    "Prevotella copri",
    "Coprococcus catus",
    "Adlercreutzia equolifaciens",
    "Streptococcus infantis",
    "Barnesiella intestinihominis",
    "Fusobacterium ulcerans",
    "Lactococcus lactis",
    "Erysipelotrichaceae bacterium 6_1_45",
    "Streptococcus mitis",
    "Clostridium perfringens",
    "Oxalobacter formigenes",
    "Enterococcus faecium",
    "Campylobacter concisus",
    "Lachnospiraceae bacterium 9_1_43BFAA",
    "Bifidobacterium longum",
    "Fusobacterium mortiferum",
    "Propionibacterium propionicum",
    "Blautia hydrogenotrophica",
    "Bacteroides massiliensis",
    "Bifidobacterium dentium",
    "Faecalibacterium prausnitzii",
    "Escherichia coli",
    "Lachnospiraceae bacterium 4_1_37FAA",
    "Bacteroides oleiciplenus",
    "Parabacteroides merdae",
    "Roseburia hominis",
    "Bilophila wadsworthia",
    "Lachnospiraceae bacterium 6_1_63FAA",
    "Bacteroides nordii",
    "Streptococcus sanguinis",
    "Eggerthella lenta",
    "Bacteroides faecis",
    "Megamonas hypermegale",
    "Bacteroides stercoris",
    "Haemophilus parainfluenzae",
    "Streptococcus salivarius",
    "Dialister invisus",
    "Gemella morbillorum",
    "Clostridiaceae bacterium JC118",
    "[Eubacterium] infirmum",
    "Lachnospiraceae bacterium 5_1_63FAA",
    "Streptococcus australis",
    "Turicibacter sanguinis",
    "Ruminococcus champanellensis",
    "Aggregatibacter segnis",
    "Ruminococcaceae bacterium D16",
    "Burkholderiales bacterium 1_1_47",
    "[Ruminococcus] gnavus",
    "Odoribacter splanchnicus",
    "[Clostridium] leptum",
    "Alistipes obesi",
    "Clostridiales bacterium 1_7_47FAA",
    "Rothia mucilaginosa",
    "Blautia hansenii",
    "Bifidobacterium pseudocatenulatum",
    "Parabacteroides distasonis",
    "Streptococcus gordonii",
    "Gemella haemolysans",
    "Streptococcus tigurinus",
    "Catenibacterium mitsuokai",
    "Eubacterium ramulus",
    "Collinsella intestinalis",
    "Lactobacillus casei",
    "Paraprevotella xylaniphila",
    "Bacteroides ovatus",
    "Erysipelatoclostridium ramosum",
    "Roseburia inulinivorans",
    "Klebsiella pneumoniae",
    "Alistipes finegoldii",
    "Bifidobacterium animalis",
    "Fusobacterium varium",
    "Streptococcus mutans",
    "Alistipes onderdonkii",
    "Anaerotruncus colihominis",
    "[Eubacterium] dolichum",
    "Abiotrophia defectiva",
    "Bacteroides intestinalis",
    "Bacteroides vulgatus",
    "Fusobacterium nucleatum",
    "[Clostridium] clostridioforme"
  ],
  "results_summary": {
    "models_run": [
      "neural_network"
    ],
    "model_results": {
      "neural_network": {
        "status": "failed",
        "error": "\nAll the 216 fits failed.\nIt is very likely that your model is misconfigured.\nYou can try to debug the error by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n216 fits failed with the following error:\nTraceback (most recent call last):\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py\", line 859, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\base.py\", line 1363, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\pipeline.py\", line 661, in fit\n    self._final_estimator.fit(Xt, y, **last_step_params[\"fit\"])\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\base.py\", line 1363, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\neural_network\\_multilayer_perceptron.py\", line 848, in fit\n    return self._fit(X, y, sample_weight=sample_weight, incremental=False)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\neural_network\\_multilayer_perceptron.py\", line 507, in _fit\n    self._fit_stochastic(\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\neural_network\\_multilayer_perceptron.py\", line 747, in _fit_stochastic\n    self._update_no_improvement_count(\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\neural_network\\_multilayer_perceptron.py\", line 797, in _update_no_improvement_count\n    val_score = self._score(X, y, sample_weight=sample_weight)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\neural_network\\_multilayer_perceptron.py\", line 1288, in _score\n    return super()._score_with_function(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\noahl\\Desktop\\University\\thesis\\MultiDisease_Project\\.venv\\Lib\\site-packages\\sklearn\\neural_network\\_multilayer_perceptron.py\", line 863, in _score_with_function\n    if np.isnan(y_pred).any() or np.isinf(y_pred).any():\n       ^^^^^^^^^^^^^^^^\nTypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\n"
      }
    },
    "completed_models": []
  }
}